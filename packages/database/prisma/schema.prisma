// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  healthRecords HealthRecord[]
  activities    Activity[]
  labResults    LabResult[]
  predictions   Prediction[]
  notifications Notification[]
}

model HealthRecord {
  id                     String   @id @default(cuid())
  userId                 String
  date                   DateTime
  weight                 Float?
  height                 Float?
  bloodPressureSystolic  Int?
  bloidPressureDiastolic Int?
  heartRate              Int?
  sleepHours             Float?
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId, date])
}

model Activity {
  id        String   @id @default(cuid())
  userId    String
  date      DateTime
  type      String
  duraion   Int
  distance  Float?
  calories  Int?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId, date])
}

model LabResult {
  id          String   @id @default(cuid())
  userId      String
  date        DateTime
  testType    String
  value       Float
  unit        String
  normalRange String?
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])

  @@index([userId, date])
}

model Prediction {
  id         String   @id @default(cuid())
  userId     String
  type       String
  riskScore  Float
  confidence Float
  factors    Json
  createdAt  DateTime @default(now())
  expiresAt  DateTime

  user User @relation(fields: [userId], references: [id])

  @@index([userId, type])
}

model Notification {
  id        String   @id @default(cuid())
  userId    String
  type      String
  title     String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@index([userId, read])
}
